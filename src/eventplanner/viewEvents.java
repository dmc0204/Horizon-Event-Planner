/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eventplanner;

import javax.swing.JOptionPane;
import javax.swing.*;
import java.sql.*;

/**
 *
 * @author Donovan Cummins
 */
public class viewEvents extends javax.swing.JFrame {

    /**
     * Creates new form viewEvents
     */
    public viewEvents() {
        initComponents();

        try {

            //using defaultListModel to return the data of interest from the resultset. -DC
            DefaultListModel eventsList = dbWork.dbWorkSelectEvent(dbWork.getLogin(), dbWork.getPassword(), "SELECT * FROM horizonevent");

            //populating the listbox with data in the defaultListModel. -DC
            viewEventsJlist.setModel(eventsList);

            // while(eventsList.next()){ //My stub to see what is in the resultset. -DC
            //   System.out.println(eventsList.getString("eName"));                  
            // }  
            System.out.println("Events added to the list."); //Stub feedback. Followed by copy and pasted back button code for the same object. -DC

        } catch (ClassNotFoundException e) { //Catching Errors. -DC
            System.out.println("ClassNotFoundException viewEvents"); //Gotta catch'em all! -DC
        } catch (SQLException f) {//If at first you do not succeed... -DC
            System.out.println("SQLException viewEvents");//Blame it on your SQL Syntax. -DC
        }
    }

    public void viewEventsClose() { //Setting visibility of this jframe. -DC

        this.setVisible(false);

    }

    public void viewEventsOpen() { //Setting visibility of this jframe. -DC

        this.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewEventsJlist = new javax.swing.JList<>();
        viewEventsBackButton = new javax.swing.JButton();
        viewEventDeleteButton = new javax.swing.JButton();
        viewEventsManageButton = new javax.swing.JButton();
        viewEventsLabel = new javax.swing.JLabel();
        viewEventsPrintButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        viewEventsJlist.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        viewEventsJlist.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(viewEventsJlist);

        viewEventsBackButton.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        viewEventsBackButton.setText("Back");
        viewEventsBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEventsBackButtonActionPerformed(evt);
            }
        });

        viewEventDeleteButton.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        viewEventDeleteButton.setText("Delete");
        viewEventDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEventDeleteButtonActionPerformed(evt);
            }
        });

        viewEventsManageButton.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        viewEventsManageButton.setText("Manage");
        viewEventsManageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEventsManageButtonActionPerformed(evt);
            }
        });

        viewEventsLabel.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        viewEventsLabel.setText("View Events");

        viewEventsPrintButton.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        viewEventsPrintButton.setText("Print");
        viewEventsPrintButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewEventsPrintButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(viewEventsBackButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(viewEventsPrintButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(viewEventsManageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(viewEventDeleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(viewEventsLabel)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewEventsLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(viewEventsBackButton)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(viewEventsManageButton)
                        .addGap(42, 42, 42)
                        .addComponent(viewEventDeleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(viewEventsPrintButton)
                        .addGap(25, 25, 25))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewEventsBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEventsBackButtonActionPerformed

        viewEventsClose();
        eventMenu eventMenuGUI = new eventMenu();
        eventMenuGUI.setVisible(true);

// TODO add your handling code here:
    }//GEN-LAST:event_viewEventsBackButtonActionPerformed

    private void viewEventDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEventDeleteButtonActionPerformed

        //Delete Button Event. Somehow I will take the selected element from the jList and use it to identify a record to delete in the database. -DC
        //String s = viewEventsJlist.getSelectedValue();
        int j = viewEventsJlist.getSelectedIndex(); //passing the selected index value to use to reference the right value in the dbWork eventID arraylist. -DC
        System.out.println(j);
       

        try { //Try Catch for the dbWorkDeleteEvent method. Passing selected index at the time delete is pressed and passing the delete command to the database. -DC
            dbWork.dbWorkDeleteEvent(dbWork.getLogin(), dbWork.getPassword(), dbWork.getEID(j));
           
        } catch (ClassNotFoundException e) {
            System.out.println("ClassNotFoundException during eventDelete.");
        } catch (SQLException f) {
            System.out.println("SQLException during eventDelete.");
        }

        try {

            //using defaultListModel to return the data of interest from the resultset. -DC
            DefaultListModel eventsList = dbWork.dbWorkSelectEvent(dbWork.getLogin(), dbWork.getPassword(), "SELECT * FROM horizonevent");

            //populating the listbox with data in the defaultListModel. -DC
            viewEventsJlist.setModel(eventsList);
            /*
             while(eventsList.next()){ //My stub to see what is in the resultset. -DC
               System.out.println(eventsList.getString("eName"));                  
             }  
            */
            System.out.println("Event deleted from the list."); //Stub feedback. Followed by copy and pasted back button code for the same object. -DC

        } catch (ClassNotFoundException e) { //Catching Errors. -DC
            System.out.println("ClassNotFoundException viewEvents"); //Gotta catch'em all! -DC
        } catch (SQLException f) {//If at first you do not succeed... -DC
            System.out.println("SQLException viewEvents");//Blame it on your SQL Syntax. -DC
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_viewEventDeleteButtonActionPerformed

    private void viewEventsManageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEventsManageButtonActionPerformed

       
        
        if(viewEventsJlist.getSelectedIndex() >= 0){ //checking that something is selected. -DC
        
        dbWork.seteid(dbWork.getEID(viewEventsJlist.getSelectedIndex())); //going into the event array to get the event id for the selected event and passing it to an event id integer to be used by other objects. -DC
        System.out.println(dbWork.geteid());
        viewEventsClose(); //typical method I use to switch between jframes. -DC
        manageEvents manageEventsUI = new manageEvents();
        manageEventsUI.setVisible(true);
        
        }
        
        

    
    }//GEN-LAST:event_viewEventsManageButtonActionPerformed

    private void viewEventsPrintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewEventsPrintButtonActionPerformed
       
        dbWork.seteid(dbWork.getEID(viewEventsJlist.getSelectedIndex())); //setting the event ID that the printReport method will use. -DC
        
        try{
        dbWork.printReport();
        }catch(ClassNotFoundException e){
            
        }catch(SQLException j){
            
        }
    }//GEN-LAST:event_viewEventsPrintButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewEvents.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewEvents().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewEventDeleteButton;
    private javax.swing.JButton viewEventsBackButton;
    private javax.swing.JList<String> viewEventsJlist;
    private javax.swing.JLabel viewEventsLabel;
    private javax.swing.JButton viewEventsManageButton;
    private javax.swing.JButton viewEventsPrintButton;
    // End of variables declaration//GEN-END:variables
}
